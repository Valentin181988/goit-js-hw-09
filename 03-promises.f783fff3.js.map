{"version":3,"sources":["js/03-promises.js"],"names":["delayInput","document","querySelector","stepInput","amountInput","form","createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","evt","amountValue","value","firstDelay","preventDefault","i","then","console","log","catch"],"mappings":";AAAA,MAAMA,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAOJ,SAASC,cAAc,SA+BpC,SAASI,EAAcC,EAAUC,GAExB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQH,EAAUC,GAElBG,EAAOJ,EAAUC,KApCvBH,EAAKS,iBAAiB,SAAWC,IACzBC,MAAAA,EAAcZ,EAAYa,MAC1BC,EAAalB,EAAWiB,MACxBT,EAAQL,EAAUc,MAExBF,EAAII,iBAEC,IAAA,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,IACtB,IAANA,EACFd,EAAcc,EAAGZ,EAAQU,GACtBG,KAAK,EAAGd,SAAAA,EAAUC,MAAAA,MACvBc,QAAQC,2BAA2BhB,QAAeC,SAEnDgB,MAAM,EAAGjB,SAAAA,EAAUC,MAAAA,MAClBc,QAAQC,0BAA0BhB,QAAeC,SAG/CF,EAAcc,EAAGZ,GACda,KAAK,EAAGd,SAAAA,EAAUC,MAAAA,MACvBc,QAAQC,2BAA2BhB,QAAeC,SAEnDgB,MAAM,EAAGjB,SAAAA,EAAUC,MAAAA,MAClBc,QAAQC,0BAA0BhB,QAAeC","file":"03-promises.f783fff3.js","sourceRoot":"../src","sourcesContent":["const delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector(\".form\");\n\nform.addEventListener('submit', (evt) => {\n  const amountValue = amountInput.value;\n  const firstDelay = delayInput.value;\n  const delay = stepInput.value;\n\n  evt.preventDefault();\n\n  for (let i = 1; i <= amountValue; i++) {\n    if (i === 1) {\n      createPromise(i, delay + firstDelay)\n        .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    } else {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }\n  }\n});\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\n\n\n\n"]}